{"version":3,"sources":["components/CvParse/CvParse.js","common/utils.js","containers/dokufrmServer.js","components/DokuPanel/DokuPanel.js","components/DokuCell/DokuCell.js","components/DokuGrid/DokuGrid.js","containers/MathDoku.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","CvParse","_useState","useState","_useState2","_slicedToArray","file","setFile","_useState3","_useState4","cvContent","setCvContent","_useState5","_useState6","loading","setLoading","handleSubmit","_ref","_asyncToGenerator","_callee","e","_context","preventDefault","alert","console","log","uploadFile","_x","apply","arguments","_ref2","_callee2","formData","_context2","FormData","append","axios","post","headers","Access-Control-Allow-Origin","content-type","response","data","message","_x2","React","createElement","className","onSubmit","style","float","margin","onChange","target","files","class","JSON","stringify","replace","loadDoku","url","params","callback","fetch","cont","cache","Content-Type","body","res","ok","status","statusText","json","dokufrmServer","WrappedComponent","_React$Component","_class2","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","convJSONtoMap","jsonData","_step","charMap","opsArr","_iterator","_createForOfIteratorHelper","s","n","_step2","charSet","_iterator2","l","coords","c","val","v","ops","f","op","o","r","setState","prevstate","pending","workingObj","currIndex","onClick","coord","clickedCell","onLoadErr","cells","resetState","prevState","count","setWorkingCell","_objectSpread","_defineProperty","setClue","setCells","onSolveClick","isSolved","_inherits","_createClass","_this2","focusedCell","x","y","Component","DokuPanel","fontSize","paddingTop","height","marginLeft","for","width","DokuCell","colDim","inputEl","useRef","styletemp","borderWidth","_props$coord$split$ma","split","map","t","parseInt","_props$coord$split$ma2","ci","cj","opsSet","_x$split$map","_x$split$map2","xi","xj","current","focus","ref","cellVal","text","maxLength","htmlFor","backgroundColor","toLowerCase","styles","styleContainer","marginTop","flex","justifyContent","alignItems","styleTick","textAlign","color","overlay","position","elevation","DokuGrid","onChangeCell","matched","_i","_Object$keys","matchMaps","setSolved","_coord$split","_coord$split2","row","col","grid","solved","_loop","rows","_loop2","j","cellValue","clue","padding","fontFamily","size","renderGrid","MathDokuMain","Dashboard","id","href","Link","to","App","BrowserRouter","basename","process","Routes","Route","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gWACAA,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,OAAAgB,eAAAH,EAAAC,EAAA,CAAAC,QAAAE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAN,EAAAC,GAAA,IAAAF,EAAA,aAAAQ,GAAAR,EAAA,SAAAC,EAAAC,EAAAC,GAAA,OAAAF,EAAAC,GAAAC,GAAA,SAAAM,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAAG,EAAAI,QAAA,SAAAV,EAAAE,EAAAM,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAzB,EAAAE,EAAAM,GAAA,cAAAgB,EAAAE,KAAA,IAAAf,EAAAH,EAAAmB,KAAA,6BAAAH,EAAAX,MAAAM,EAAA,gBAAA1B,MAAA+B,EAAAX,IAAAc,KAAAnB,EAAAmB,MAAA,UAAAH,EAAAE,OAAAf,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAb,EAAAE,EAAAM,GAAAF,EAAA,SAAAmB,EAAAG,EAAArC,EAAAsB,GAAA,WAAAa,KAAA,SAAAb,IAAAe,EAAAC,KAAAtC,EAAAsB,IAAA,MAAAf,GAAA,OAAA4B,KAAA,QAAAb,IAAAf,IAAAtB,EAAAuB,OAAA,IAAAoB,EAAA,YAAAd,KAAA,SAAAyB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAA1C,EAAA0C,EAAAhD,EAAA,kBAAAiD,OAAA,IAAAC,EAAAxD,OAAAyD,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA3D,GAAAG,EAAAiD,KAAAO,EAAApD,KAAAgD,EAAAI,GAAA,IAAAE,EAAAP,EAAApD,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAyB,GAAA,SAAAO,EAAA5D,GAAA,0BAAA6D,QAAA,SAAA5B,GAAAtB,EAAAX,EAAAiC,EAAA,SAAAC,GAAA,OAAAoB,KAAAvB,QAAAE,EAAAC,OAAA,SAAA4B,EAAAnC,EAAAoC,GAAA,IAAAC,EAAAV,KAAAvB,QAAA,SAAAE,EAAAC,GAAA,SAAA+B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAnC,EAAAC,EAAAgC,EAAAC,GAAA,IAAAtB,EAAAC,EAAAnB,EAAAM,GAAAN,EAAAO,GAAA,aAAAW,EAAAE,KAAA,KAAAsB,EAAAxB,EAAAX,IAAApB,EAAAuD,EAAAvD,MAAA,OAAAA,GAAA,iBAAAA,GAAAb,EAAAiD,KAAApC,EAAA,WAAAiD,EAAAG,QAAApD,EAAAwD,SAAAC,KAAA,SAAAzD,GAAAsD,EAAA,OAAAtD,EAAAoD,EAAAC,IAAA,SAAAhD,GAAAiD,EAAA,QAAAjD,EAAA+C,EAAAC,KAAAJ,EAAAG,QAAApD,GAAAyD,KAAA,SAAAC,GAAAH,EAAAvD,MAAA0D,EAAAN,EAAAG,IAAA,SAAAI,GAAA,OAAAL,EAAA,QAAAK,EAAAP,EAAAC,OAAAtB,EAAAX,KAAAkC,CAAAnC,EAAAC,EAAAgC,EAAAC,KAAA,OAAAH,MAAAO,KAAAN,UAAA,SAAA1B,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA/B,SAAAuB,EAAAI,QAAA,QAAAyC,IAAAzC,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA/B,SAAAqE,SAAA9C,EAAAI,OAAA,SAAAJ,EAAAK,SAAAwC,EAAAnC,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAA0C,UAAA,yDAAApC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA/B,SAAAuB,EAAAK,KAAA,aAAAW,EAAAE,KAAA,OAAAlB,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAqC,EAAAhC,EAAAX,IAAA,OAAA2C,IAAA7B,MAAAnB,EAAAQ,EAAAyC,YAAAD,EAAA/D,MAAAe,EAAAkD,KAAA1C,EAAA2C,QAAA,WAAAnD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAAwC,GAAA7C,EAAAQ,SAAA,KAAAG,GAAAqC,GAAAhD,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAA0C,UAAA,oCAAA/C,EAAAQ,SAAA,KAAAG,GAAA,SAAAyC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA5B,KAAAkC,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAtC,EAAAsC,EAAAQ,YAAA,GAAA9C,EAAAE,KAAA,gBAAAF,EAAAX,IAAAiD,EAAAQ,WAAA9C,EAAA,SAAAf,EAAAN,GAAA8B,KAAAkC,WAAA,EAAAJ,OAAA,SAAA5D,EAAAqC,QAAAoB,EAAA3B,WAAAsC,OAAA,YAAAlC,EAAAmC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAxF,GAAA,GAAAyF,EAAA,OAAAA,EAAA5C,KAAA2C,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA/F,EAAAiD,KAAA2C,EAAAI,GAAA,OAAAlB,EAAAjE,MAAA+E,EAAAI,GAAAlB,EAAA/B,MAAA,EAAA+B,EAAA,OAAAA,EAAAjE,WAAA4D,EAAAK,EAAA/B,MAAA,EAAA+B,GAAA,OAAAA,UAAA,OAAAA,KAAA3C,GAAA,SAAAA,IAAA,OAAAtB,WAAA4D,EAAA1B,MAAA,UAAAG,EAAAnD,UAAAoD,EAAAzC,EAAAgD,EAAA,cAAAP,GAAAzC,EAAAyC,EAAA,cAAAD,KAAA+C,YAAAvF,EAAAyC,EAAA3C,EAAA,qBAAAZ,EAAAsG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAlD,GAAA,uBAAAkD,EAAAH,aAAAG,EAAAE,QAAA1G,EAAA2G,KAAA,SAAAJ,GAAA,OAAArG,OAAA0G,eAAA1G,OAAA0G,eAAAL,EAAAhD,IAAAgD,EAAAM,UAAAtD,EAAAzC,EAAAyF,EAAA3F,EAAA,sBAAA2F,EAAApG,UAAAD,OAAA6B,OAAA+B,GAAAyC,GAAAvG,EAAA8G,MAAA,SAAAzE,GAAA,OAAAoC,QAAApC,IAAA0B,EAAAE,EAAA9D,WAAAW,EAAAmD,EAAA9D,UAAAO,EAAA,kBAAA+C,OAAAzD,EAAAiE,gBAAAjE,EAAA+G,MAAA,SAAAvF,EAAAC,EAAAC,EAAAC,EAAAuC,QAAA,IAAAA,MAAA8C,SAAA,IAAAC,EAAA,IAAAhD,EAAA1C,EAAAC,EAAAC,EAAAC,EAAAC,GAAAuC,GAAA,OAAAlE,EAAAsG,oBAAA7E,GAAAwF,IAAA/B,OAAAR,KAAA,SAAAF,GAAA,OAAAA,EAAArB,KAAAqB,EAAAvD,MAAAgG,EAAA/B,UAAAnB,EAAAD,GAAAhD,EAAAgD,EAAAlD,EAAA,aAAAE,EAAAgD,EAAAtD,EAAA,kBAAAiD,OAAA3C,EAAAgD,EAAA,mDAAA9D,EAAAkH,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAAlG,KAAAmG,EAAAD,EAAAtB,KAAA5E,GAAA,OAAAkG,EAAAE,UAAA,SAAAlC,IAAA,KAAAgC,EAAAf,QAAA,KAAAnF,EAAAkG,EAAAG,MAAA,GAAArG,KAAAmG,EAAA,OAAAjC,EAAAjE,MAAAD,EAAAkE,EAAA/B,MAAA,EAAA+B,EAAA,OAAAA,EAAA/B,MAAA,EAAA+B,IAAAlF,EAAA6D,SAAA5B,EAAA9B,UAAA,CAAAsG,YAAAxE,EAAA8D,MAAA,SAAAuB,GAAA,GAAA7D,KAAA8D,KAAA,EAAA9D,KAAAyB,KAAA,EAAAzB,KAAAb,KAAAa,KAAAZ,WAAAgC,EAAApB,KAAAN,MAAA,EAAAM,KAAAjB,SAAA,KAAAiB,KAAArB,OAAA,OAAAqB,KAAApB,SAAAwC,EAAApB,KAAAkC,WAAA3B,QAAA6B,IAAAyB,EAAA,QAAAZ,KAAAjD,KAAA,MAAAiD,EAAAc,OAAA,IAAApH,EAAAiD,KAAAI,KAAAiD,KAAAR,OAAAQ,EAAAe,MAAA,MAAAhE,KAAAiD,QAAA7B,IAAA6C,KAAA,WAAAjE,KAAAN,MAAA,MAAAwE,EAAAlE,KAAAkC,WAAA,GAAAG,WAAA,aAAA6B,EAAAzE,KAAA,MAAAyE,EAAAtF,IAAA,OAAAoB,KAAAmE,MAAA9E,kBAAA,SAAA+E,GAAA,GAAApE,KAAAN,KAAA,MAAA0E,EAAA,IAAA7F,EAAAyB,KAAA,SAAAqE,EAAAC,EAAAC,GAAA,OAAAhF,EAAAE,KAAA,QAAAF,EAAAX,IAAAwF,EAAA7F,EAAAkD,KAAA6C,EAAAC,IAAAhG,EAAAI,OAAA,OAAAJ,EAAAK,SAAAwC,KAAAmD,EAAA,QAAA5B,EAAA3C,KAAAkC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA7B,KAAAkC,WAAAS,GAAApD,EAAAsC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA9B,KAAA8D,KAAA,KAAAU,EAAA7H,EAAAiD,KAAAiC,EAAA,YAAA4C,EAAA9H,EAAAiD,KAAAiC,EAAA,iBAAA2C,GAAAC,EAAA,IAAAzE,KAAA8D,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA/B,KAAA8D,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAAxE,KAAA8D,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA5F,MAAA,6CAAAmB,KAAA8D,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAA1C,OAAA,SAAAG,EAAAb,GAAA,QAAA+D,EAAA3C,KAAAkC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA7B,KAAAkC,WAAAS,GAAA,GAAAd,EAAAC,QAAA9B,KAAA8D,MAAAnH,EAAAiD,KAAAiC,EAAA,eAAA7B,KAAA8D,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAAjF,GAAA,aAAAA,IAAAiF,EAAA5C,QAAAlD,MAAA8F,EAAA1C,aAAA0C,EAAA,UAAAnF,EAAAmF,IAAArC,WAAA,UAAA9C,EAAAE,OAAAF,EAAAX,MAAA8F,GAAA1E,KAAArB,OAAA,OAAAqB,KAAAyB,KAAAiD,EAAA1C,WAAA9C,GAAAc,KAAA2E,SAAApF,IAAAoF,SAAA,SAAApF,EAAA0C,GAAA,aAAA1C,EAAAE,KAAA,MAAAF,EAAAX,IAAA,gBAAAW,EAAAE,MAAA,aAAAF,EAAAE,KAAAO,KAAAyB,KAAAlC,EAAAX,IAAA,WAAAW,EAAAE,MAAAO,KAAAmE,KAAAnE,KAAApB,IAAAW,EAAAX,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAyB,KAAA,kBAAAlC,EAAAE,MAAAwC,IAAAjC,KAAAyB,KAAAQ,GAAA/C,GAAA0F,OAAA,SAAA5C,GAAA,QAAAW,EAAA3C,KAAAkC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA7B,KAAAkC,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAAhC,KAAA2E,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA3C,IAAA2F,MAAA,SAAA/C,GAAA,QAAAa,EAAA3C,KAAAkC,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA7B,KAAAkC,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAAvC,EAAAsC,EAAAQ,WAAA,aAAA9C,EAAAE,KAAA,KAAAqF,EAAAvF,EAAAX,IAAAwD,EAAAP,GAAA,OAAAiD,GAAA,UAAAjG,MAAA,0BAAAkG,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAA1B,KAAAjB,SAAA,CAAA/B,SAAAoD,EAAAmC,GAAAf,aAAAE,WAAA,SAAA1B,KAAArB,SAAAqB,KAAApB,SAAAwC,GAAAlC,IAAA3C,EAsEeyI,MAlEf,WAAmB,IAAAC,EACOC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAAAI,EACcL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACAT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAKpBG,EAAY,eAAAC,EAAAC,YAAA3J,IAAA4G,KAAG,SAAAgD,EAAMC,GAAC,OAAA7J,IAAAwB,KAAA,SAAAsI,GAAA,cAAAA,EAAAtC,KAAAsC,EAAA3E,MAAA,OACP,GAAnB0E,EAAEE,iBACU,MAARhB,EAAY,CAAAe,EAAA3E,KAAA,QAC4B,OAA1C6E,MAAM,oCAAoCF,EAAA9G,OAAA,iBAG5CwG,GAAW,GACXJ,EAAa,IACba,QAAQC,IAAI,kBACZC,EAAWpB,GAEX,wBAAAe,EAAAnC,SAAAiC,MACD,gBAZiBQ,GAAA,OAAAV,EAAAW,MAAA3G,KAAA4G,YAAA,GAcZH,EAAU,eAAAI,EAAAZ,YAAA3J,IAAA4G,KAAG,SAAA4D,EAAMzB,GAAI,IAAA0B,EAAA,OAAAzK,IAAAwB,KAAA,SAAAkJ,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAvF,MAAA,QACrBsF,EAAW,IAAIE,UACZC,OAAO,OAAQ7B,GAExB8B,IAAMC,KApBN,mCAoB4BL,EAAU,CACpCM,QAAS,CACPC,8BAAgC,IAChCC,eAAgB,yBAGnBtG,KAAK,SAAAuG,GACJ1B,GAAW,GACXS,QAAQC,IAAI,0BAA2BgB,EAASC,MAChD/B,EAAa8B,EAASC,QAEvB5C,MAAM,SAAA1D,GAEL2E,GAAW,GACXS,QAAQC,IAAI,yBACZD,QAAQC,IAAIrF,GACZoF,QAAQC,IAAIrF,EAAMuG,SAClBpB,MAAM,mDAEP,wBAAAU,EAAA/C,SAAA6C,MACF,gBAxBea,GAAA,OAAAd,EAAAF,MAAA3G,KAAA4G,YAAA,GA+BhB,OACEgB,IAAAC,cAAA,QAAMC,UAAU,uBAAuBC,SAAUhC,GAC/C6B,IAAAC,cAAA,gBACED,IAAAC,cAAA,cAAQ,iBACRD,IAAAC,cAAA,SAAOG,MAAO,CAACC,MAAM,OAAQC,OAAQ,QAASzI,KAAK,OAAO0I,SATzC,SAAAhC,GACrBI,QAAQC,IAAIL,EAAEiC,OAAOC,MAAM,IAC3B/C,EAAQa,EAAEiC,OAAOC,MAAM,OAQnBT,IAAAC,cAAA,UAAQG,MAAO,CAACC,MAAM,QAASC,OAAQ,QAASI,MAAM,+BAA+B7I,KAAK,UAAS,aAEpGmI,IAAAC,cAAA,SAAG,+FACFhC,EAAU+B,IAAAC,cAAA,OAAKG,MAAO,CAACE,OAAO,SAAU,qBAA6BN,IAAAC,cAAA,OAAKC,UAAU,cAAcS,KAAKC,UAAU/C,EAAW,KAAM,GAAGgD,QAAQ,OAAO,8DCzCnJ,IAAMC,EAAW,SAACC,EAAKC,EAAQC,EAAUhL,GAI9CiL,MAAMC,uCAAwB,CAC5BpK,OAAQ,OACRqK,MAAO,WACP3B,QAAS,CAAE4B,eAAe,mBAAqB3B,8BAA8B,KAC7E4B,KAAMX,KAAKC,UAAUI,KAEtB3H,KAAK,SAAAkI,GAEA,IAAKA,EAAIC,GACL,MAAMvK,MAAMsK,EAAIE,OAAS,KAAOF,EAAIG,YAExC,OAAOH,EAAII,SAEjBtI,KAAK,SAAAkI,GACDN,EAASM,KAEZtE,MAAM,SAAAsB,GACLtI,EAAIsI,GACJG,MAAMH,6hCCzCZ,IAwIeqD,EAxIO,SAACC,EAAkBd,GAErC,gBAAAe,GAEI,SAAAC,EAAYC,GAAO,IAAAC,EAYb,OAZaC,YAAA9J,KAAA2J,IACfE,EAAAE,YAAA/J,KAAAgK,YAAAL,GAAA/J,KAAAI,KAAM4J,KAkBVK,cAAgB,SAACC,GAEb,IAEwBC,EAFpBC,EAAU,GAAIC,EAAS,GAAGC,EAAAC,EAEdL,GAAQ,IAAxB,IAAAI,EAAAE,MAAAL,EAAAG,EAAAG,KAAA/K,MAA0B,KAEAgL,EAFjBpN,EAAG6M,EAAA3M,MACNmN,EAAU,GAAGC,EAAAL,EACEjN,EAAIuN,GAAC,IAAxB,IAAAD,EAAAJ,MAAAE,EAAAE,EAAAH,KAAA/K,MAA0B,KAAjBoL,EAAMJ,EAAAlN,MACb4M,EAAQU,EAAOC,GAAK,CAAEC,IAAKF,EAAOG,EAAGC,IAAKb,EAAO3H,QACjDiI,EAAQxI,KAAK2I,EAAOC,IACrB,MAAAlN,GAAA+M,EAAAzE,EAAAtI,GAAA,QAAA+M,EAAAO,IACDd,EAAOlI,KAAK,CAAEiJ,GAAc,KAAT9N,EAAI+N,EAAY,OAAM/N,EAAI+N,EAAIlC,IAAK7L,EAAIgO,EAAGR,OAAQH,KACtE,MAAA9M,GAAAyM,EAAAnE,EAAAtI,GAAA,QAAAyM,EAAAa,IAEDtB,EAAK0B,SAAS,SAACC,GAAS,MAAM,CAC1BC,SAAS,EACTrB,QAASA,EACTC,OAAQA,EACRqB,WAAY,GACZC,UAAWH,EAAUG,UAAY,MAExC9B,EAGD+B,QAAU,SAACC,GACPhC,EAAK0B,SAAU,CACXO,YAAcD,KAErBhC,EAEDkC,UAAY,SAAClO,GACTgM,EAAK0B,SACL,CACIpK,MAAQtD,KAEfgM,EAED9B,SAAW,WACP,IAAIiE,EAAQnC,EAAKnL,MAAMsN,MACvBnC,EAAKoC,aACLpC,EAAK0B,SAAU,SAACW,GAAS,MAAM,CAC3BF,MAAQA,KAIZtD,EAAS,KAAM,CAAEsD,MAAQA,EAAOG,MAAQtC,EAAKnL,MAAMiN,WAAa9B,EAAKI,cAAeJ,EAAKkC,YAC5FlC,EAEDuC,eAAiB,SAACP,EAAOb,GACrBnB,EAAK0B,SAAU,SAAC7M,GAAK,MAAM,CACvBgN,WAAUW,YAAA,GAAO3N,EAAMgN,WAAUY,YAAA,GAAGT,EAAQb,QAEnDnB,EAED0C,QAAU,WACN,IAAIV,EAAQhC,EAAKnL,MAAMoN,YACnBd,EAAMnB,EAAKnL,MAAM0L,QAAQyB,GAAOb,IACpCnB,EAAKuC,eAAeP,EAAOb,IAC9BnB,EAED2C,SAAW,SAACrG,GACR0D,EAAKoC,aACL,IAAID,EAAQ7F,EAAEiC,OAAO5K,MACrBqM,EAAK0B,SAAU,SAACW,GAAS,MAAM,CAC3BF,MAAQA,KAGZtD,EAAS,KAAM,CAAEsD,MAAQA,EAAOG,MAAQtC,EAAKnL,MAAMiN,WAAa9B,EAAKI,cAAeJ,EAAKkC,YAC5FlC,EAED4C,aAAe,WACX5C,EAAK0B,SAAU,CACXmB,UAAW,KAElB7C,EAEDoC,WAAa,WACTpC,EAAK0B,SAAS,SAAC7M,GAAK,MAAM,CACtBsN,MAAO,KACP5B,QAAS,KACTC,OAAQ,KACRlJ,MAAO,KACPsK,QAAS,KACTC,WAAY,KACZgB,UAAU,MApGd7C,EAAKnL,MAAQ,CACTsN,MAAO,EACPL,UAAW,EACXvB,QAAS,KACTC,OAAQ,KACRlJ,MAAO,KACPsK,QAAS,KACTC,WAAY,KACZI,YAAa,KACbY,UAAU,GACZ7C,EAkHL,OAhIL8C,YAAAhD,EAAAD,GAeKkD,YAAAjD,EAAA,EAAApM,IAAA,oBAAAC,MAAA,WAGGkL,EAAS,KAAO,CAAEsD,MAAOhM,KAAKtB,MAAMsN,MAAOG,MAAOnM,KAAKtB,MAAMiN,WAAe3L,KAAKiK,cAAejK,KAAK+L,aACxG,CAAAxO,IAAA,SAAAC,MAAA,WAyFQ,IAAAqP,EAAA7M,KAEL,OAAQA,KAAKtB,MAAM0L,QACXxC,IAAAC,cAAC4B,EAAgB,CACjBuC,MAAOhM,KAAKtB,MAAMsN,MAClB5B,QAASpK,KAAKtB,MAAM0L,QACpBsB,WAAY1L,KAAKtB,MAAMgN,WACvBrB,OAAQrK,KAAKtB,MAAM2L,OACnBqC,SAAU1M,KAAKtB,MAAMgO,SACrBf,UAAW3L,KAAKtB,MAAMiN,UACtBF,QAASzL,KAAKtB,MAAM+M,QACpBtK,MAAOnB,KAAKtB,MAAMyC,MAClB2L,YAAa9M,KAAKtB,MAAMoN,YACxBS,QAASvM,KAAKuM,QACdxE,SAAU/H,KAAK+H,SACfyE,SAAU,SAACO,EAAEC,GAAC,OAAKH,EAAKL,SAASO,EAAEC,IACnCZ,eAAgB,SAACW,EAAEC,GAAC,OAAKH,EAAKT,eAAeW,EAAEC,IAC/CpB,QAAS,SAACmB,GAAC,OAAKF,EAAKjB,QAAQmB,IAC7BN,aAAczM,KAAKyM,eACjB7E,IAAAC,cAAA,OAAKC,UAAU,iBAAgB,IAAG9H,KAAKtB,MAAMyC,MAAkEyG,IAAAC,cAAA,SAAG,4DAA7DD,IAAAC,cAAA,UAAI,kDAAsH,SAC5L8B,EAhIL,CAAqB/B,IAAMqF,YCsBhBC,SAzBG,SAACtD,GAQjB,OAAOhC,IAAAC,cAAA,OAAKC,UAAU,cACdF,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,UAAQpI,KAAK,SAASqI,UAAU,wBAAwB8D,QAAS,gBAAkCxK,IAAtBwI,EAAMkD,aAAkD,IAArBlD,EAAMkD,aAAmBlD,EAAM2C,YAAc,QAC7J3E,IAAAC,cAAA,UAASpI,KAAK,SAASqI,UAAU,wBAAwB8D,QAAS,WAAQhC,EAAM6C,iBAAmB,SACjG7E,IAAAC,cAAA,UAASC,UAAU,YAAY7E,KAAK,WAAYzF,MAAOoM,EAAMoC,MAAO7D,SAAUyB,EAAM4C,UAChF5E,IAAAC,cAAA,UAAQrK,MAAM,KAAI,KAClBoK,IAAAC,cAAA,UAAQrK,MAAM,KAAI,KAClBoK,IAAAC,cAAA,UAAQrK,MAAM,KAAI,MAEtBoK,IAAAC,cAAA,SAAQG,MAAO,CAACmF,SAAS,SAAWC,WAAY,SAAUC,OAAO,OAASC,WAAY,WAAYC,IAAI,YAAW,SACjH3F,IAAAC,cAAA,UAASpI,KAAK,SAAS6I,MAAM,yCAAyCN,MAAO,CAACwF,MAAM,QAAU5B,QAAS,WAAmBhC,EAAMoC,MAAOzF,QAAQC,IAAI,cAAgBoD,EAAMoC,OAdnLpC,EAAM7B,aAcwM,+iCCyEnM0F,MAxEf,SAAkB7D,GAEhB,IAsBiCO,EAnB7BuD,EAAS,cAIPC,EAAUC,iBAAO,MAEnBC,EAAY,CACdC,YAAa,GASdC,EAEcnE,EAAMiC,MAAMmC,MAAM,IAAIC,IAAI,SAACC,GAAC,OAAKC,SAASD,KAAGE,EAAAhJ,YAAA2I,EAAA,GAAvDM,EAAED,EAAA,GAAEE,EAAEF,EAAA,GAAA9D,EAAAC,EACGX,EAAM2E,OAAOzD,QAAM,IAAjC,IAAAR,EAAAE,MAAAL,EAAAG,EAAAG,KAAA/K,MAAmC,KAAzB8O,EAAArE,EAAA3M,MACSwQ,MAAM,IAAIC,IAAI,SAACC,GAAC,OAAKC,SAASD,KAAGO,EAAArJ,YAAAoJ,EAAA,GAA7CE,EAAED,EAAA,GAAEE,EAAEF,EAAA,GACPC,GAAML,IACJM,GAAOL,EAAK,IACdT,EAA2B,gBAAIH,GAO7BiB,GAAOL,EAAK,IACdT,EAA4B,iBAAIH,IAQhCiB,GAAML,IACJI,GAAOL,EAAK,IACdR,EAA0B,eAAIH,GAO5BgB,GAAOL,EAAK,IACdR,EAA6B,kBAAIH,KAQtC,MAAA7P,GAAAyM,EAAAnE,EAAAtI,GAAA,QAAAyM,EAAAa,IAED,OAAQvD,IAAAC,cAAA,OAAKC,UAAU,wBAAwB8D,QAAS,kBAAM+B,EAAQiB,QAAQC,SAAS7G,MAAO6F,GAE5FjG,IAAAC,cAAA,SAAOiH,IAAKnB,EAASnQ,MAAOoM,EAAMmF,QAAS9L,KAAM2G,EAAMiC,MAAO1D,SAAU,SAAChC,GAnD3E,IAAsB6I,KAmD0E7I,EAAEiC,OAAO5K,OAlD5FoM,EAAMoC,MACf1F,MAAM,4CAA8CsD,EAAMoC,OAG5DpC,EAAMzB,SAASyB,EAAMiC,MAAOmD,IA8CsFC,UAAW,EAAGrD,QAAS,kBAAMhC,EAAMgC,QAAQhC,EAAMiC,UAChKjC,EAAMiC,OAASjC,EAAM2E,OAAOzD,OAAO,IAAOlD,IAAAC,cAAA,SAAOqH,QAAStF,EAAMiC,MAAQ7D,MAAO,CAACmH,gBAAgB,YAAY,IAACvH,IAAAC,cAAA,WAAM+B,EAAM2E,OAAOnD,GAAGgE,cAAgB,IAAMxF,EAAM2E,OAAOpF,KAAU,OCrFjLkG,SAAS,CAEbC,eAAgB,CACdC,UAAW,IACXC,KAAM,EACNC,eAAgB,SAChBC,WAAY,UAGdC,UAAW,CACTC,UAAW,SACXC,MAAO,QAGTC,QAAS,CACPN,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZK,SAAU,WACVvC,MAAO,MACPH,OAAQ,MACR2C,UAAW,KA4EAC,EArED,SAAAvG,GAEZ,SAAAuG,EAAYrG,GAAO,IAAAC,EA8BlB,OA9BkBC,YAAA9J,KAAAiQ,IACjBpG,EAAAE,YAAA/J,KAAAgK,YAAAiG,GAAArQ,KAAAI,KAAM4J,KAGRsG,aAAe,SAACrE,EAAOb,GACrB,GJvCK,SAAmBZ,EAASsB,EAAYM,EAAOH,EAAOb,GAC3D,IAAImF,GAAQ,EAEZ,GAAM1T,OAAOgH,KAAK2G,GAAS1H,OAAS,GAAMjG,OAAOgH,KAAKiI,GAAYhJ,OAAS,CACzE,QAAA0N,EAAA,EAAAC,EAAc5T,OAAOgH,KAAKiI,GAAW0E,EAAAC,EAAA3N,OAAA0N,IAAG,CAAnC,IAAIrD,EAACsD,EAAAD,GAEN,GAAKrD,GAAKlB,GAAWzB,EAAQ2C,GAAG/B,KAAQU,EAAWqB,GAEjD,OADAoD,GAAU,EAIhB,GAAI/F,EAAQyB,GAAOb,KAAOA,EAExB,OADAmF,GAAU,OAKZA,GAAU,EACZ,OAAOA,EIqBHG,CAAUzG,EAAKD,MAAMQ,QAASP,EAAKD,MAAM8B,WAAY7B,EAAKD,MAAMoC,MAAOH,EAAOb,GAChFnB,EAAKD,MAAM2G,WAAU,OADvB,CAIA1G,EAAKD,MAAMwC,eAAeP,EAAOb,GAGjC,IAHsC,IAAAwF,EAErB3E,EAAMmC,MAAM,IAAGyC,EAAArL,YAAAoL,EAAA,GAA3BE,EAAGD,EAAA,GAAEE,EAAGF,EAAA,GACJ1D,EAAI,EAAGA,EAAIlD,EAAKD,MAAMoC,QAASe,EACtC,GAAIA,IAAM2D,GACJ7G,EAAKD,MAAM8B,WAAWqB,EAAI,GAAK4D,IAAQ3F,EAEzC,YADA1E,MAAM,yBAA2B0E,EAAM,YAAc+B,EAAI,GAAK,gBAAkBoB,SAASwC,GAAO,IAGtG,IAAK,IAAI3D,EAAI,EAAGA,EAAInD,EAAKD,MAAMoC,QAASgB,EACtC,GAAIA,GAAK2D,GACH9G,EAAKD,MAAM8B,WAAWgF,EAAM,GAAK1D,IAAMhC,EAEvC,YADA1E,MAAM,yBAA2B0E,EAAM,YAAcmD,SAASuC,GAAO,GAAK,gBAAkB1D,EAAI,MAIzGnD,EAGD+B,QAAU,SAACC,GACThC,EAAKD,MAAMgC,QAAQC,IACpBhC,EAiCA,OAjEW8C,YAAAsD,EAAAvG,GAIXkD,YAAAqD,EAAA,EAAA1S,IAAA,oBAAAC,MAAA,WAgCawC,KAAK4J,MAAMoC,QACxB,CAAAzO,IAAA,aAAAC,MAAA,WAOC,IALW,IAAAqP,EAAA7M,KAGP4Q,EAAK,GACLC,IAAU7Q,KAAK4J,MAAM8C,SAAyBoE,EAAA,SAAAnO,GAGhD,IADA,IAAIoO,EAAK,GAAGC,EAAA,SAAAC,GAEV,IAAIC,EAAYL,EAAShE,EAAKjD,MAAMQ,QAAQzH,EAAI,GAAIsO,GAAGjG,SAA4C5J,IAArCyL,EAAKjD,MAAM8B,WAAW/I,EAAI,GAAIsO,GAAmBpE,EAAKjD,MAAM8B,WAAW/I,EAAI,GAAIsO,GAAK,GAClJF,EAAK5O,KAAKyF,IAAAC,cAAC4F,EAAQ,CAAElQ,IAAKoF,EAAI,GAAIsO,EAAGpF,MAAQlJ,EAAI,GAAIsO,EAAGlC,QAASmC,EAAY,GAAI/I,SAAU0E,EAAKqD,aAActE,QAAS,kBAAMiB,EAAKjB,QAAQjJ,EAAI,GAAIsO,IAAIE,KAAMtE,EAAKjD,MAAMuH,KAAMnF,MAAOa,EAAKjD,MAAMoC,MAAOuC,OAAS1B,EAAKjD,MAAMS,OAAOwC,EAAKjD,MAAMQ,QAAQzH,EAAE,GAAGsO,GAAG/F,SAFrP+F,EAAE,EAAGA,EAAGpE,EAAKjD,MAAMoC,MAAOiF,IAAGD,EAAAC,GAItCL,EAAKzO,KAAKyF,IAAAC,cAAA,OAAKtK,IAAKoF,EAAE,IAAMoO,KANrBpO,EAAE,EAAGA,EAAG3C,KAAK4J,MAAMoC,MAAOrJ,IAAGmO,EAAAnO,GAQtC,OAAOiF,IAAAC,cAAA,OAAKC,UAAU,qBAAqB8I,KAC5C,CAAArT,IAAA,SAAAC,MAAA,WAWC,OAPcoK,IAAAC,cAAA,OAAKC,UAAU,WAAWE,MAAO,CAAEoJ,QAAS,KACzCpR,KAAK4J,MAAMzI,OAASyG,IAAAC,cAAA,OAAKG,MAAOqH,EAAOC,gBAAgB1H,IAAAC,cAAA,OAAKG,MAAO,CAACqJ,WAAY,qBAAsBrR,KAAK4J,MAAMzI,QACjHnB,KAAK4J,MAAM6B,SAAW7D,IAAAC,cAAA,OAAKG,MAAOqH,EAAOC,eAAgBgC,KAAK,QAAQzB,MAAM,aAChC,IAA1CpT,OAAOgH,KAAKzD,KAAK4J,MAAMS,QAAQ3H,SAAiB1C,KAAKuR,aACvDvR,KAAK4J,MAAM8C,UAAY9E,IAAAC,cAAA,OAAKG,MAAOqH,EAAOS,SAASlI,IAAAC,cAAA,QAAMG,MAAOqH,EAAOM,WAAW,IAAC/H,IAAAC,cAAA,UAAI,UAAa,YAItHoI,EAjEW,CAASrI,IAAMqF,WCjBhBuE,EAAehI,EAXX,SAACI,GAEd,OACIhC,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAACqF,EAAS,CAACJ,YAAalD,EAAMkD,YAAaL,aAAc7C,EAAM6C,aAAc1E,SAAU6B,EAAM7B,SAAUyE,SAAU5C,EAAM4C,SAAUR,MAAOpC,EAAMoC,MAAOO,QAAS3C,EAAM2C,UACpK3E,IAAAC,cAACoI,EAAarG,oBC2GX6H,MAlHf,WAEE,OACE7J,IAAAC,cAAA,OAAK6J,GAAG,SAASpJ,MAAM,UACnBV,IAAAC,cAAA,OAAKS,MAAM,sBACPV,IAAAC,cAAA,OAAKS,MAAM,UACPV,IAAAC,cAAA,MAAIS,MAAM,eAAc,uBACxBV,IAAAC,cAAA,MAAIS,MAAM,iBAAgB,gCAE1BV,IAAAC,cAAA,OAAKS,MAAM,OACPV,IAAAC,cAAA,MAAIS,MAAM,YACNV,IAAAC,cAAA,MAAIS,MAAM,YACNV,IAAAC,cAAA,SAAG,yBAMvBD,IAAAC,cAAA,OAAKS,MAAM,uBACPV,IAAAC,cAAA,OAAKS,MAAM,SACHV,IAAAC,cAAA,MAAIS,MAAM,mBAAkB,YACxBV,IAAAC,cAAA,WAASS,MAAM,QACXV,IAAAC,cAAA,UAAQS,MAAM,eACVV,IAAAC,cAAA,MAAIS,MAAM,cAAa,iBACvBV,IAAAC,cAAA,WACID,IAAAC,cAAA,KAAG8J,KAAK,+BAA+BrJ,MAAM,eAAc,eAGnEV,IAAAC,cAAA,OAAKS,MAAM,oBACPV,IAAAC,cAAA,SAAG,qMAKXD,IAAAC,cAAA,WAASS,MAAM,QACXV,IAAAC,cAAA,UAAQS,MAAM,eACVV,IAAAC,cAAA,MAAIS,MAAM,cAAa,mBACvBV,IAAAC,cAAA,WACID,IAAAC,cAAC+J,IAAI,CAACC,GAAG,YAAW,eAG5BjK,IAAAC,cAAA,OAAKS,MAAM,oBACPV,IAAAC,cAAA,SAAG,oKAKXD,IAAAC,cAAA,WAASS,MAAM,QACXV,IAAAC,cAAA,UAAQS,MAAM,eACVV,IAAAC,cAAA,MAAIS,MAAM,cAAa,aACvBV,IAAAC,cAAA,WACID,IAAAC,cAAC+J,IAAI,CAACC,GAAG,aAAY,cAG7BjK,IAAAC,cAAA,OAAKS,MAAM,oBACPV,IAAAC,cAAA,SAAG,+HAECD,IAAAC,cAAA,WAAKD,IAAAC,cAAA,WAAK,oDAOlCD,IAAAC,cAAA,OAAKS,MAAM,SACHV,IAAAC,cAAA,MAAIS,MAAM,mBAAkB,iBACxBV,IAAAC,cAAA,WAASS,MAAM,QACXV,IAAAC,cAAA,UAAQS,MAAM,eACVV,IAAAC,cAAA,MAAIS,MAAM,sBAAqB,6DAC/BV,IAAAC,cAAA,KAAGS,MAAM,aAAY,gBACJV,IAAAC,cAAA,KAAG8J,KAAK,wGAAwGrJ,MAAM,eAAc,aAI7JV,IAAAC,cAAA,WAASS,MAAM,QACXV,IAAAC,cAAA,UAAQS,MAAM,eACVV,IAAAC,cAAA,MAAIS,MAAM,sBAAqB,4FAC/BV,IAAAC,cAAA,KAAGS,MAAM,aAAY,gBACJV,IAAAC,cAAA,KAAG8J,KAAK,oCAAoCrJ,MAAM,eAAc,aAIzFV,IAAAC,cAAA,WAASS,MAAM,QACXV,IAAAC,cAAA,UAAQS,MAAM,eACVV,IAAAC,cAAA,MAAIS,MAAM,sBAAqB,kEAC/BV,IAAAC,cAAA,KAAGS,MAAM,aAAY,gBACJV,IAAAC,cAAA,KAAG8J,KAAK,oCAAoCrJ,MAAM,eAAc,aAIzFV,IAAAC,cAAA,WAASS,MAAM,QACXV,IAAAC,cAAA,UAAQS,MAAM,eACVV,IAAAC,cAAA,MAAIS,MAAM,sBAAqB,iEAC/BV,IAAAC,cAAA,KAAGS,MAAM,aAAY,gBACJV,IAAAC,cAAA,KAAG8J,KAAK,oCAAoCrJ,MAAM,eAAc,aAIzFV,IAAAC,cAAA,WAASS,MAAM,QACXV,IAAAC,cAAA,UAAQS,MAAM,eACVV,IAAAC,cAAA,MAAIS,MAAM,sBAAqB,gFAC/BV,IAAAC,cAAA,KAAGS,MAAM,aAAY,gBACJV,IAAAC,cAAA,KAAG8J,KAAK,oCAAoCrJ,MAAM,eAAc,iBCnFlGwJ,MAhBf,WACE,OACElK,IAAAC,cAACkK,IAAa,CAACC,SAAUC,cACrBrK,IAAAC,cAACqK,IAAM,KACHtK,IAAAC,cAACsK,IAAK,CAACC,KAAK,IAAIC,QAASzK,IAAAC,cAAC4J,EAAS,QACnC7J,IAAAC,cAACsK,IAAK,CAACC,KAAK,UAAUC,QAASzK,IAAAC,cAAC7C,EAAO,QACvC4C,IAAAC,cAACsK,IAAK,CAACC,KAAK,WAAWC,QAASzK,IAAAC,cAAC2J,EAAY,WCDrCc,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECZRC,IAASC,OAAOhL,IAAAC,cAACiK,EAAG,MAAKe,SAASC,eAAe,SD2HzC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhS,KAAK,SAAAiS,GACjCA,EAAaC","file":"static/js/main.bfb02e77.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport  './style.css';\nimport  '../../App.css';\n\nfunction CvParse() {\n  const [file, setFile] = useState(null);\n  const [cvContent, setCvContent] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const UPLOAD_ENDPOINT =\n    \"http://52.56.137.11:8000/parsecv\";\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (file == null) {\n      alert('Please upload CV to parse first.');\n      return;\n    }\n    setLoading(true);\n    setCvContent('');\n    console.log('in submitttttt');\n    uploadFile(file);\n    //console.log(res.data);\n    //setCvContent(JSON.stringify(res.data, undefined, 4));\n  };\n\n  const uploadFile = async file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    axios.post(UPLOAD_ENDPOINT, formData, {\n      headers: {\n        'Access-Control-Allow-Origin' : '*',\n        \"content-type\": \"multipart/form-data\"\n      }\n    })\n    .then(response => {\n      setLoading(false);\n      console.log('after scuccess shit....', response.data);\n      setCvContent(response.data);\n    })\n    .catch(error => {\n      //setFile(null);\n      setLoading(false);\n      console.log('in failll errro catch');\n      console.log(error);\n      console.log(error.message);\n      alert('Possible Error in network call to parse file.');\n    });\n    ;\n  };\n\n  const handleOnChange = e => {\n    console.log(e.target.files[0]);\n    setFile(e.target.files[0]);\n  };\n\n  return (\n    <form className=\"pure-form form-style\" onSubmit={handleSubmit}>\n      <fieldset>\n        <legend>Resume Parser</legend>\n        <input style={{float:'left', margin: '2rem'}} type=\"file\" onChange={handleOnChange} />\n        <button style={{float:'right', margin: '2rem'}} class=\"button-secondary pure-button\" type=\"submit\">Parse CV</button>\n       </fieldset>\n       <p>This is currently not deployed on AWS - please contact us if you need an ngrok URL for demo</p>\n       {loading ? <div style={{margin:'5rem'}}>{\"Analysing CV.....\"}</div> : <pre className=\"json-style\">{JSON.stringify(cvContent, null, 2).replace(/\\\\n/g,'')}</pre>}\n    </form>\n  );\n}\n\nexport default CvParse;\n","\n\n  export function matchMaps(charMap, workingObj, cells, coord, val) {\n    let matched=true;\n    // when we come here, workingObj will have one less than charMap as workingobj for current coors has not yet been updated in state!\n    if ( (Object.keys(charMap).length - 1) <= Object.keys(workingObj).length ) {\n      for (let x of Object.keys(workingObj) ) {\n          //let coord = i + '' + j;\n          if ((x != coord) && (charMap[x].val !=  workingObj[x])) {\n            matched = false;\n            return matched;\n          }\n      }\n      if (charMap[coord].val != val) {\n        matched = false;\n        return matched;\n      }\n    }\n    else\n      matched = false;\n    return matched;\n  }\n\n\n\n  export const loadDoku = (url, params, callback, err) => {\n\n    let cont = 'https://1dyfre.deta.dev';  // change to mask o=dok url later!!!! \n    //let cont = 'http://localhost:8080'; \n    fetch(cont + '/api/mathdoku', {                  //\n      method: 'POST',\n      cache: 'no-cache',\n      headers: { 'Content-Type':'application/json',  'Access-Control-Allow-Origin':'*', },\n      body: JSON.stringify(params),\n    })\n    .then(res =>\n      {\n          if (!res.ok) {\n              throw Error(res.status + '; ' + res.statusText)\n          }\n          return res.json() \n      })\n   .then(res => {\n        callback(res)\n     })\n    .catch(e => {\n      err(e);\n      alert(e );\n    })\n\n}","import React from 'react';\n//import axios from 'axios';\nimport {loadDoku, matchMaps} from '../common/utils'\nimport '../App.css';\n\n\nconst dokufrmServer = (WrappedComponent, url) => {\n\n    return class extends React.Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                cells: 4,\n                currIndex: 0,\n                charMap: null,\n                opsArr: null,\n                error: null,\n                pending: null,\n                workingObj: null,\n                clickedCell: null,\n                isSolved: false,\n            };\n        }\n\n        componentDidMount() {\n            loadDoku(null,  { cells: this.state.cells, count: this.state.currIndex  } , this.convJSONtoMap, this.onLoadErr)\n        }\n\n        convJSONtoMap = (jsonData) => {\n            \n            let charMap = {}, opsArr = [];\n\n            for (let obj of jsonData) {\n              let charSet = [] //new Set();\n              for (let coords of obj.l) {\n                charMap[coords.c] = { val: coords.v, ops: opsArr.length } ;\n                charSet.push(coords.c);\n              }\n              opsArr.push({ op: (obj.o == '/') ? '÷' : obj.o , res: obj.r, coords: charSet });\n            }\n\n            this.setState((prevstate) => ({\n                pending: false,\n                charMap: charMap,\n                opsArr: opsArr,\n                workingObj: {},\n                currIndex: prevstate.currIndex + 1\n                }))\n        }\n    \n\n        onClick = (coord) => {\n            this.setState ({\n                clickedCell : coord\n            })\n        }\n\n        onLoadErr = (err) => {\n            this.setState (\n            {\n                error : err,\n            })\n        }\n\n        onSubmit = () => {\n            let cells = this.state.cells\n            this.resetState();\n            this.setState ((prevState) => ({\n                cells : cells,\n                //currIndex : prevState.currIndex + 1,\n            }))\n\n            loadDoku(null, { cells : cells, count : this.state.currIndex }, this.convJSONtoMap, this.onLoadErr)\n        }\n\n        setWorkingCell = (coord, val) => {\n            this.setState ((state) => ({\n                workingObj : {...state.workingObj, [coord]: val}\n            }))\n        }\n\n        setClue = () => {\n            let coord = this.state.clickedCell;\n            let val = this.state.charMap[coord].val;\n            this.setWorkingCell(coord, val);\n        }\n\n        setCells = (e) => {\n            this.resetState();\n            let cells = e.target.value\n            this.setState ((prevState) => ({\n                cells : cells,\n                //currIndex : prevState.currIndex + 1,\n            }))\n            loadDoku(null, { cells : cells, count : this.state.currIndex }, this.convJSONtoMap, this.onLoadErr)\n        }\n\n        onSolveClick = () => {\n            this.setState ({\n                isSolved : true\n            })\n        }\n\n        resetState = () => {\n            this.setState((state) => ({\n                cells: null,\n                charMap: null,\n                opsArr: null,\n                error: null,\n                pending: null,\n                workingObj: null,\n                isSolved: false,\n            }));\n        }\n\n        render() {\n\n            return (this.state.charMap) ? \n                    <WrappedComponent \n                    cells={this.state.cells} \n                    charMap={this.state.charMap} \n                    workingObj={this.state.workingObj} \n                    opsArr={this.state.opsArr} \n                    isSolved={this.state.isSolved} \n                    currIndex={this.state.currIndex}\n                    pending={this.state.pending}\n                    error={this.state.error}\n                    focusedCell={this.state.clickedCell}\n                    setClue={this.setClue}\n                    onSubmit={this.onSubmit}\n                    setCells={(x,y) => this.setCells(x,y)} \n                    setWorkingCell={(x,y) => this.setWorkingCell(x,y)} \n                    onClick={(x) => this.onClick(x)} \n                    onSolveClick={this.onSolveClick}/>\n                    : <div className=\"fetch-overlay\"> {!this.state.error ? <h3>Please wait while a new puzzle is created.....</h3> : <p> Sorry...There was an error in fetching Doku from server</p>} </div>;\n        }\n    }\n\n}\n\n\nexport default dokufrmServer","import React from 'react';\nimport  './style.css'\n\n\n\nconst DokuPanel = (props) => {\n\n\n  function fetchNew(numCells) {\n    props.onSubmit();\n  }\n\n\n  return <div className=\"form-style\">\n          <div className=\"pure-form tool-bar\">\n            <button type=\"submit\" className=\"pure-button tool-item\" onClick={() => { if (props.focusedCell !== undefined && props.focusedCell != '') props.setClue(); }}>Clue</button>\n            <button  type=\"submit\" className=\"pure-button tool-item\" onClick={() => { props.onSolveClick(); }}>Solve</button>\n              <select  className=\"tool-item\" name=\"cellsize\"  value={props.cells} onChange={props.setCells}>\n                  <option value=\"4\">4</option>\n                  <option value=\"6\">6</option>\n                  <option value=\"9\">9</option>\n              </select>\n              <label  style={{fontSize:'0.8rem',  paddingTop: '0.5rem', height:'2rem',  marginLeft: '-0.9rem'}} for=\"cellsize\">cells</label>\n              <button  type=\"submit\" class=\"button-secondary pure-button tool-item\" style={{width:'9rem',}} onClick={() => { let cell = props.cells; console.log('props.cells' + props.cells); fetchNew(cell); }}>New Puzzle</button>\n          </div>\n        </div>;    \n\n  \n}\n\nexport default DokuPanel;","import React, { useRef } from 'react';\nimport  './style.css';\n\n\nconst styles = {\n\n  textView: {\n    borderWidth: 1,\n    borderColor: 'gray',\n  },\n\n  labelStyle: {\n    position: 'absolute',\n    right: 1,\n    top:  0,\n    fontSize: 12,\n    textAlign: 'right',\n    fontWeight: 'bold',\n    fontFamily: 'OpenSans-Light',\n  },\n\n};\n\n\nfunction DokuCell(props) {\n\n  let cellSize ;\n  let fontSize, labelSize=12;\n  let colActive = 'gray';\n  let colDim = 'transparent';\n  cellSize = 20;\n  fontSize=20;\n\n  const inputEl = useRef(null);\n\n  let styletemp = {\n    borderWidth: 1,\n  }\n\n  function handleChange(text) {\n    if (text > props.cells) {\n      alert('You can only enter a value between 1 and ' + props.cells);\n      return;\n    }\n    props.onChange(props.coord, text)\n  }\n\n  let [ci, cj] = props.coord.split('').map((t) => parseInt(t));\n  for (let x of props.opsSet.coords) {\n    let [xi, xj] = x.split('').map((t) => parseInt(t));\n    if (xi == ci) {\n      if (xj == (cj - 1)) {\n        styletemp['borderLeftColor'] = colDim;\n        //styletemp['borderLeftWidth'] = 0.1;\n      }\n      else {\n        //styletemp['borderLeftColor'] = colActive;\n        //styletemp['borderLeftWidth'] = 2;\n      }\n      if (xj == (cj + 1)) {\n        styletemp['borderRightColor'] = colDim;\n        //styletemp['borderRightWidth'] = 0.1;\n      }\n      else {\n        //styletemp['borderRightColor'] = colActive;\n        //styletemp['borderRightWidth'] = 2;\n      }\n    }\n    if (xj == cj) {\n      if (xi == (ci - 1)) {\n        styletemp['borderTopColor'] = colDim;\n        //styletemp['borderTopWidth'] = 0.1;\n      }\n      else {\n        //styletemp['borderTopColor'] = colActive;\n        //styletemp['borderTopWidth'] = 2;\n      }\n      if (xi == (ci + 1)) {\n        styletemp['borderBottomColor'] = colDim;\n        //styletemp['borderBottomWidth'] = 0.1;\n      }\n      else {\n        //styletemp['borderBottomColor'] = colActive;\n        //styletemp['borderBottomWidth'] = 2;\n      }\n    }\n  }\n\n  return (<div className=\"pure-u-1-3 cell-style\" onClick={() => inputEl.current.focus()} style={styletemp}>\n    {/*(props.coord == props.opsSet.coords[0]) && <div style={styles.labelStyle}>{props.opsSet.op.toLowerCase() + ' ' + props.opsSet.res}</div>*/}\n    <input ref={inputEl} value={props.cellVal} name={props.coord} onChange={(e) => { handleChange(e.target.value) } } maxLength={1} onClick={() => props.onClick(props.coord)}/>\n    { (props.coord == props.opsSet.coords[0]) && <label htmlFor={props.coord}  style={{backgroundColor:'inherit'}}> <sup>{props.opsSet.op.toLowerCase() + ' ' + props.opsSet.res}</sup> </label>}\n  </div>);\n\n}\n\nexport default DokuCell;","import React, { useState, useEffect } from 'react';\nimport {  matchMaps } from '../../common/utils';\nimport { DokuCell } from '../DokuCell';\nimport  './style.css'\n\n\nconst styles = {\n\n  styleContainer: {\n    marginTop: 100,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  styleTick: {\n    textAlign: 'center',\n    color: 'teal',\n  },\n\n  overlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    width: '50%',\n    height: '50%',\n    elevation: 4,\n  }\n\n\n};\n\n\nclass DokuGrid extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  onChangeCell = (coord, val) => {\n    if (matchMaps(this.props.charMap, this.props.workingObj, this.props.cells, coord, val)) {\n      this.props.setSolved(true);\n      return;\n    }\n    this.props.setWorkingCell(coord, val);\n\n    let [row, col] = coord.split('');\n    for (let x = 0; x < this.props.cells; ++x)\n      if (x !== row)\n        if (this.props.workingObj[x + '' + col] == val) {\n          alert('You have already used ' + val + ' in row ' + (x + 1) + ' and column ' + (parseInt(col) + 1));\n          return;\n        }\n    for (let y = 0; y < this.props.cells; ++y)\n      if (y != col)\n        if (this.props.workingObj[row + '' + y] == val) {\n            alert('You have already used ' + val + ' in row ' + (parseInt(row) + 1) + ' and column ' + (y + 1));\n            return;\n        }\n\n  }\n\n  \n  onClick = (coord) => {\n    this.props.onClick(coord);\n  }\n  \n\n  componentDidMount() {\n    let cells = this.props.cells;\n  }\n\n  renderGrid() {\n    \n\n    let grid=[];\n    let solved = (this.props.isSolved) ? true: false; // add workimngobj to charMap compaison also here\n    for (let i=0; i< this.props.cells; i++) {\n      let rows=[];\n      for (let j=0; j< this.props.cells; j++) {\n        let cellValue = solved ? this.props.charMap[i + '' +j].val : (this.props.workingObj[i + '' +j] !== undefined ? this.props.workingObj[i + '' +j] : '') ;\n        rows.push(<DokuCell  key={i + '' +j} coord= {i + '' +j} cellVal={cellValue + ''} onChange={this.onChangeCell} onClick={() => this.onClick(i + '' +j)} clue={this.props.clue} cells={this.props.cells} opsSet={ this.props.opsArr[this.props.charMap[i+''+j].ops] } />)\n      }\n      grid.push(<div key={i+''} >{rows}</div>);\n    }\n    return <div className=\"pure-g gridcolumn\">{grid}</div>;\n  }\n\n  render () {\n\n    let retView = <div className=\"dokugrid\" style={{ padding: 10}}>\n                    {this.props.error && <div style={styles.styleContainer}><div style={{fontFamily: 'OpenSans-Regular'}}>{this.props.error}</div></div>}\n                    {this.props.pending && <div style={styles.styleContainer} size=\"large\" color=\"tomato\"/>}\n                    {!(Object.keys(this.props.opsArr).length === 0) && this.renderGrid()}\n                    {this.props.isSolved && <div style={styles.overlay}><span style={styles.styleTick}> <h1>&#10003;</h1>  </span></div>} \n                </div>\n\n    return retView;\n  }\n\n}\n\nexport default DokuGrid;","import React from 'react'\nimport dokufrmServer from './dokufrmServer';\nimport  { DokuPanel } from '../components/DokuPanel';\nimport  { DokuGrid }  from '../components/DokuGrid';\nimport '../App.css';\n\nconst MathDoku = (props) => {\n\n    return (\n        <div className=\"mathdoku\"> \n            <DokuPanel focusedCell={props.focusedCell} onSolveClick={props.onSolveClick} onSubmit={props.onSubmit} setCells={props.setCells} cells={props.cells} setClue={props.setClue} />\n            <DokuGrid {...props}/>\n        </div>\n    );\n\n}\n\nexport const MathDokuMain = dokufrmServer(MathDoku);\n","import React, { useState } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport  '../App.css';\n\nfunction Dashboard() {\n\n  return (\n    <div id=\"layout\" class=\"pure-g\">\n        <div class=\"sidebar pure-u-1-4\">\n            <div class=\"header\">\n                <h1 class=\"brand-title\">simple smart things</h1>\n                <h2 class=\"brand-tagline\">Algorithms, AI and use cases</h2>\n\n                <nav class=\"nav\">\n                    <ul class=\"nav-list\">\n                        <li class=\"nav-item\">\n                            <p>by disruptiveDNA</p>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n        <div class=\"content  pure-u-3-4\">\n            <div class=\"posts\">\n                    <h1 class=\"content-subhead\">Programs</h1>\n                        <section class=\"post\">\n                            <header class=\"post-header\">\n                                <h2 class=\"post-title\">Maths Chatbot</h2>\n                                <nav>\n                                    <a href=\"https://www.grayvariable.com\" class=\"post-author\">Math chat</a> \n                                </nav>\n                            </header>\n                            <div class=\"post-description\">\n                                <p>\n                                    The most accurate (at the risk of sounding presumptuous) maths questions solver chatbot - built with a simple neural network model and some left recursive grammar. To be open sourced shortly.\n                                </p>\n                            </div>\n                        </section>\n                        <section class=\"post\">\n                            <header class=\"post-header\">\n                                <h2 class=\"post-title\">Document Parser</h2>\n                                <nav>\n                                    <Link to=\"/cvparse\">Doc Parse</Link>\n                                </nav>\n                            </header>\n                            <div class=\"post-description\">\n                                <p>\n                                    Natural Language Processing (and some programmatic intuition) to analyze and parse documents. Parse a sample type of HR document here or subscribe to the API.\n                                </p>\n                            </div>\n                        </section>\n                        <section class=\"post\">\n                            <header class=\"post-header\">\n                                <h2 class=\"post-title\">Math Doku</h2>\n                                <nav>\n                                    <Link to=\"/mathdoku\">MathDoku</Link>\n                                </nav>\n                            </header>\n                            <div class=\"post-description\">\n                                <p>\n                                    Calcdoku puzzle generated by a backtracking algorithm, and with a twist - the first ever with the modulo/remainder operator.\n                                    <br/><br/>\n                                    And there's more stuff...just run out of ink.\n                                </p>\n                            </div>\n                        </section>\n\n            </div>\n            <div class=\"posts\">\n                    <h1 class=\"content-subhead\">Tech Articles</h1>\n                        <section class=\"post\">\n                            <header class=\"post-header\">\n                                <h5 class=\"post-title-article\">NLP: Sentence dissection by dependency parsing with Spacy</h5>\n                                <p class=\"post-meta\">\n                                    As posted on <a href=\"https://medium.com/gitconnected/nlp-sentence-dissection-by-dependency-parsing-with-spacy-c2f54ab22cbe\" class=\"post-author\">Medium</a> \n                                </p>\n                            </header>\n                        </section>\n                        <section class=\"post\">\n                            <header class=\"post-header\">\n                                <h5 class=\"post-title-article\">Résumé analysis with zero shot classification, nltk feature extraction, the quirks</h5>\n                                <p class=\"post-meta\">\n                                    As posted on <a href=\"https://medium.com/p/d789425a2d59\" class=\"post-author\">Medium</a> \n                                </p>\n                            </header>\n                        </section>\n                        <section class=\"post\">\n                            <header class=\"post-header\">\n                                <h3 class=\"post-title-article\">Out-of-core, multi-label text classification with scikit-learn</h3>\n                                <p class=\"post-meta\">\n                                    As posted on <a href=\"https://medium.com/p/14afa4c1bb75\" class=\"post-author\">Medium</a> \n                                </p>\n                            </header>\n                        </section>\n                        <section class=\"post\">\n                            <header class=\"post-header\">\n                                <h3 class=\"post-title-article\">Building a GraphQL API with Koa and the MongoDB native driver</h3>\n                                <p class=\"post-meta\">\n                                    As posted on <a href=\"https://medium.com/p/1a76c3930e9b\" class=\"post-author\">Medium</a> \n                                </p>\n                            </header>\n                        </section>\n                        <section class=\"post\">\n                            <header class=\"post-header\">\n                                <h3 class=\"post-title-article\">Shell scripting — the awk way to web scraping and other tasks</h3>\n                                <p class=\"post-meta\">\n                                    As posted on <a href=\"https://medium.com/p/b19baaa89436\" class=\"post-author\">Medium</a> \n                                </p>\n                            </header>\n                        </section>\n\n            </div>\n        </div>    \n    </div>\n\n    )\n}\n\nexport default Dashboard;\n","import './App.css';\nimport React from 'react';\nimport { CvParse } from './components/CvParse';\nimport { MathDokuMain } from './containers/MathDoku';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Dashboard  from './components/Dashboard';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Routes>\n            <Route path=\"/\" element={<Dashboard/>} />\n            <Route path=\"cvparse\" element={<CvParse/>} />\n            <Route path=\"mathdoku\" element={<MathDokuMain/>} />\n        </Routes>\n{/*      <div className=\"App\">\n        <Dashboard/>\n      </div>\n  */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}